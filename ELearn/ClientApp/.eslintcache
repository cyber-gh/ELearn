[{"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/index.tsx":"1","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/reportWebVitals.ts":"2","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/Router.tsx":"3","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/Navbar.tsx":"4","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/Footer.tsx":"5","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/pages/CourseView.tsx":"6","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/sampleData.ts":"7","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/CourseSlider.tsx":"8","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/CourseCard.tsx":"9","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/CourseCardCarousel.tsx":"10","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/utils.ts":"11","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/GrayBackground.tsx":"12","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/s3config.ts":"13","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/api.ts":"14","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/AppSnackBar.tsx":"15","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/FileUploader.ts":"16","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/pages/HomeView.tsx":"17","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/pages/AddLessonsView.tsx":"18","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/pages/AddCourseView.tsx":"19","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/VideoUploaderElement.tsx":"20"},{"size":505,"mtime":1609421232853,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1609355678666,"results":"23","hashOfConfig":"22"},{"size":1459,"mtime":1609432349260,"results":"24","hashOfConfig":"22"},{"size":994,"mtime":1609430872520,"results":"25","hashOfConfig":"22"},{"size":952,"mtime":1609355678671,"results":"26","hashOfConfig":"22"},{"size":342,"mtime":1609355678674,"results":"27","hashOfConfig":"22"},{"size":1719,"mtime":1609355678675,"results":"28","hashOfConfig":"22"},{"size":2727,"mtime":1609355678671,"results":"29","hashOfConfig":"22"},{"size":1333,"mtime":1609355678672,"results":"30","hashOfConfig":"22"},{"size":2418,"mtime":1609355678672,"results":"31","hashOfConfig":"22"},{"size":704,"mtime":1609435811168,"results":"32","hashOfConfig":"22"},{"size":314,"mtime":1609360330674,"results":"33","hashOfConfig":"22"},{"size":242,"mtime":1609367405593,"results":"34","hashOfConfig":"22"},{"size":1497,"mtime":1609429792315,"results":"35","hashOfConfig":"22"},{"size":1082,"mtime":1609431551293,"results":"36","hashOfConfig":"22"},{"size":820,"mtime":1609428557713,"results":"37","hashOfConfig":"22"},{"size":1989,"mtime":1609355678675,"results":"38","hashOfConfig":"22"},{"size":2633,"mtime":1609436612057,"results":"39","hashOfConfig":"22"},{"size":6809,"mtime":1609435811163,"results":"40","hashOfConfig":"22"},{"size":2441,"mtime":1609439357622,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sogl8c",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/index.tsx",[],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/reportWebVitals.ts",[],["88","89"],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/Router.tsx",[],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/Navbar.tsx",["90","91"],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/Footer.tsx",[],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/pages/CourseView.tsx",["92","93"],"import { AnyARecord } from 'dns';\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\n\nexport interface Props {\n    match: {\n        params: {\n            id: string\n        }\n    }\n}\n\nconst CourseView = ({match}: Props) => {\n    return (\n        <h2>{match.params.id }</h2>\n    );\n}\n\n export default CourseView;","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/sampleData.ts",[],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/CourseSlider.tsx",["94","95"],"import React, { useState, useEffect } from 'react'\nimport {IconButton} from \"@material-ui/core\";\nimport ArrowRight from '@material-ui/icons/ArrowForwardIos';\nimport ArrowLeft from '@material-ui/icons/ArrowBackIos';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport { cacheImages } from '../utils';\nimport { Link } from 'react-router-dom';\nimport { CourseSliderElement } from '../interfaces';\n\nexport interface Props {\n    data: CourseSliderElement[];\n}\nconst CourseSlider = ({data}: Props) => {\n    const [selected, setSelected] = useState(0);\n    const [loading, setLoading] = useState(false);\n\n    const next = () => {\n        if (selected + 1 !== data.length){\n            setSelected(selected + 1);\n        }\n        else{\n            setSelected(0);\n        }\n    }\n\n    const previous = () => {\n        if (selected !== 0){\n            setSelected(selected - 1);\n        }\n        else{\n            setSelected(data.length - 1);\n        }\n    }\n\n    useEffect(() => {\n        const urls = data.map(x => x.link);\n        cacheImages(urls);\n    }, [])\n\n    if (loading) {\n        return null;\n    }\n\n    return (\n        <div className=\"course-slider\">\n            {data.map((x, index) => (\n                <div key = {x.link + index} className = {`banner ${index === selected ? \"active\": \"inactive\"}`} style = {{backgroundImage: `url(${x.link})`}}/>\n            ))}\n            {data.map((x, index) => (\n                <div key = {x.title + x.description} className={`content ${index === selected ? \"active\": \"inactive\"}`}>\n                    <p className=\"title\">\n                        {x.title}\n                    </p>\n                    <div className=\"p description\">\n                        {x.description}\n                    </div>\n                    <Link to = {`course/${x.id}`}>\n                        <button>\n                            <PlayArrow className = \"icon\"/>\n                            Watch Now\n                        </button>\n                    </Link>\n                </div> \n            ))}\n            <div className=\"gradient\"/>\n            <div className=\"slider\">\n                <IconButton onClick = {previous} className = \"arrow-left arrow\">\n                    <ArrowLeft style = {{marginLeft: \"5px\", width: \"21px\"}}/>\n                </IconButton>\n                {data.map((x, index) => (\n                    <div key = {index} className={`circle ${index === selected ? \"active\" : \"inactive\"}`}/>\n                ))}\n                <IconButton onClick = {next} className = \"arrow-right arrow\">\n                    <ArrowRight style = {{fontSize: \"1.42rem\"}}/>\n                </IconButton>\n            </div>\n        </div>\n    );\n}\n\nexport default CourseSlider;","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/CourseCard.tsx",["96","97"],"import React, {useState} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Paper} from \"@material-ui/core\"\nimport {BookmarkBorder as BookmarkEmpty, Bookmark as BookmarkFilled} from '@material-ui/icons';\nimport { CourseCardData } from '../interfaces';\n\nexport default ({imageUrl, id, duration, title, author, students}: CourseCardData) => {\n    const [bookmarked, setBookmarked] = useState(false);\n\n    const handleClick = () => {\n        setBookmarked(!bookmarked);\n    }\n\n    return (\n        <Link to = {`/course/${id}`} className = \"course-card\">\n            <img src = {imageUrl} className = \"course-image\" alt = \"Not found\"/>\n            <div className = \"course-content\">\n                <div className = \"separe separe_1\">\n                    <p>\n                        {students} students\n                    </p>\n                    <p>\n                        {duration}\n                    </p>\n                </div>\n                <p className = \"course-title\">{title}</p>\n                <div className = \"separe separe_2\">\n                    <p>{author}</p>\n                    {bookmarked ? <BookmarkFilled className = \"bookmark bookmark_active\" onClick = {handleClick}/> : <BookmarkEmpty className = \"bookmark\" onClick = {handleClick}/>}\n                </div>\n            </div>\n        </Link>\n    );\n}","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/CourseCardCarousel.tsx",["98","99","100","101","102"],"import React, { useEffect, useRef, useState } from 'react'\nimport {IconButton} from \"@material-ui/core\";\nimport ArrowRight from '@material-ui/icons/ArrowForwardIos';\nimport ArrowLeft from '@material-ui/icons/ArrowBackIos';\nimport {breakpoints} from \"../utils\";\nimport { cpuUsage } from 'process';\n\nexport interface Props {\n    [key: string]: any\n}\n\n\nconst CourseCardCarousel = ({children}: Props) => {\n    const mainContainer = useRef <any> ();\n    const slide = useRef <any> ();\n    const [counter, setCounter] = useState(0);\n    const [view, setView] = useState(4);\n\n\n    const handleResize = () => {\n        const w = window.innerWidth;\n        const {mobile, tablet, smallScreen, largeScreen} = breakpoints;\n        let view = 0;\n        if (w <= mobile) {\n            view = 1;\n        }\n        else if (w <= tablet) {\n            view = 2;\n        }\n        else if (w <= smallScreen) {\n            view = 3;\n        }\n        else {\n            view = 4;\n        }\n        setView(view);\n    }\n    \n    useEffect(() => {\n        handleResize();\n        window.addEventListener(\"resize\", handleResize);\n    }, [])\n\n    const left = () => {\n        if (counter === 0)\n            return;\n        setCounter(counter - 1);\n    }\n\n    const right = () => {\n        if (counter == children.length - 1)\n            return;\n        setCounter(counter + 1);\n    }\n\n    let data = children;\n    if (view == 1){\n        data = data.slice(0, 4);\n    }\n    else if (data.length % view !== 0){\n        data = data.slice(0, Math.floor(data.length / view) * view)\n    }\n\n\n    return (\n        <section ref = {mainContainer} className = \"card-carousel\">\n            <IconButton disabled = {counter === 0} onClick = {left} className = \"arrow arrow-left\">\n                <ArrowLeft/>\n            </IconButton>\n            <div className=\"window\">\n                <div className=\"content\" style = {{transform: `translateX(${-counter * 100}%)`}}>\n                    {data.map((x, index) => (\n                        <div key = {index} className=\"item\">\n                            {x}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <IconButton disabled = {(counter + 1) * view >= data.length - 1} onClick = {right} className = \"arrow arrow-right\">\n                <ArrowRight/>\n            </IconButton>\n        </section>\n    );\n}\n\nexport default CourseCardCarousel;","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/utils.ts",[],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/GrayBackground.tsx",[],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/s3config.ts",[],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/api.ts",["103"],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/AppSnackBar.tsx",[],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/FileUploader.ts",["104","105"],"import AWS from \"aws-sdk\";\n\nAWS.config.update({\n    accessKeyId: \"AKIARJNTQGZVGKTNOK2R\",\n    secretAccessKey: \"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\"\n})\n\nconst bucketName = \"cybergh\";\n\nconst bucket = new AWS.S3({\n    params: {Bucket: bucketName},\n    region: \"us-east-1\"\n})\n\nconst uploadFile = async (file, progressCallback) => {\n    const params = {\n        ACL: 'public-read',\n        Key: file.name,\n        ContentType: file.type,\n        Body: file,\n        Bucket: bucketName\n    }\n    let ans = await bucket.putObject(params)\n        .on('httpUploadProgress', (evt) => {\n            // console.log(evt.loaded / evt.total)\n            progressCallback(evt.loaded / evt.total * 100)\n        })\n        .promise()\n\n    return `https://${bucketName}.s3.amazonaws.com/${file.name}`;\n\n}\n\nexport {bucket, uploadFile};","/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/pages/HomeView.tsx",[],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/pages/AddLessonsView.tsx",["106","107","108","109","110"],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/pages/AddCourseView.tsx",["111","112","113","114","115","116","117","118"],"/Users/soltan/RiderProjects/ELearn-Copy/ELearn/ClientApp/src/components/VideoUploaderElement.tsx",["119","120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":30,"nodeType":"127","messageId":"128","endLine":2,"endColumn":34},{"ruleId":"129","severity":1,"message":"130","line":10,"column":1,"nodeType":"131","endLine":40,"endColumn":2},{"ruleId":"125","severity":1,"message":"132","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":20},{"ruleId":"125","severity":1,"message":"133","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":29},{"ruleId":"125","severity":1,"message":"134","line":15,"column":21,"nodeType":"127","messageId":"128","endLine":15,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":38,"column":8,"nodeType":"137","endLine":38,"endColumn":10,"suggestions":"138"},{"ruleId":"125","severity":1,"message":"139","line":3,"column":9,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":7,"column":1,"nodeType":"131","endLine":34,"endColumn":2},{"ruleId":"125","severity":1,"message":"140","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":18},{"ruleId":"125","severity":1,"message":"141","line":15,"column":11,"nodeType":"127","messageId":"128","endLine":15,"endColumn":16},{"ruleId":"125","severity":1,"message":"142","line":22,"column":45,"nodeType":"127","messageId":"128","endLine":22,"endColumn":56},{"ruleId":"143","severity":1,"message":"144","line":51,"column":21,"nodeType":"145","messageId":"146","endLine":51,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":57,"column":14,"nodeType":"145","messageId":"146","endLine":57,"endColumn":16},{"ruleId":"125","severity":1,"message":"147","line":2,"column":9,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"148","line":15,"column":7,"nodeType":"127","messageId":"128","endLine":15,"endColumn":17},{"ruleId":"125","severity":1,"message":"149","line":23,"column":9,"nodeType":"127","messageId":"128","endLine":23,"endColumn":12},{"ruleId":"125","severity":1,"message":"150","line":3,"column":9,"nodeType":"127","messageId":"128","endLine":3,"endColumn":25},{"ruleId":"125","severity":1,"message":"151","line":3,"column":27,"nodeType":"127","messageId":"128","endLine":3,"endColumn":41},{"ruleId":"125","severity":1,"message":"152","line":5,"column":9,"nodeType":"127","messageId":"128","endLine":5,"endColumn":19},{"ruleId":"125","severity":1,"message":"153","line":6,"column":9,"nodeType":"127","messageId":"128","endLine":6,"endColumn":20},{"ruleId":"125","severity":1,"message":"154","line":6,"column":22,"nodeType":"127","messageId":"128","endLine":6,"endColumn":42},{"ruleId":"125","severity":1,"message":"155","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":20},{"ruleId":"125","severity":1,"message":"156","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":14},{"ruleId":"125","severity":1,"message":"157","line":7,"column":43,"nodeType":"127","messageId":"128","endLine":7,"endColumn":51},{"ruleId":"125","severity":1,"message":"158","line":8,"column":9,"nodeType":"127","messageId":"128","endLine":8,"endColumn":14},{"ruleId":"125","severity":1,"message":"159","line":11,"column":9,"nodeType":"127","messageId":"128","endLine":11,"endColumn":15},{"ruleId":"125","severity":1,"message":"160","line":12,"column":9,"nodeType":"127","messageId":"128","endLine":12,"endColumn":18},{"ruleId":"135","severity":1,"message":"161","line":89,"column":8,"nodeType":"137","endLine":89,"endColumn":10,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":138,"column":65,"nodeType":"165","endLine":138,"endColumn":102},{"ruleId":"125","severity":1,"message":"166","line":19,"column":15,"nodeType":"127","messageId":"128","endLine":19,"endColumn":19},{"ruleId":"135","severity":1,"message":"167","line":34,"column":8,"nodeType":"137","endLine":34,"endColumn":10,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'Bell' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'AnyARecord' is defined but never used.","'RouteComponentProps' is defined but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'Paper' is defined but never used.","'cpuUsage' is defined but never used.","'slide' is assigned a value but never used.","'largeScreen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'uploadFile' is assigned a value but never used.","'ans' is assigned a value but never used.","'CircularProgress' is defined but never used.","'LinearProgress' is defined but never used.","'uploadFile' is defined but never used.","'cacheImages' is defined but never used.","'generateRandomString' is defined but never used.","'S3FileUpload' is defined but never used.","'config' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'bucket' is defined but never used.","'stringify' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["172"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'name' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uploadVideo'. Either include it or remove the dependency array.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [data]",{"range":"180","text":"181"},"Update the dependencies array to be: [getData]",{"range":"182","text":"183"},"Update the dependencies array to be: [uploadVideo]",{"range":"184","text":"185"},[1063,1065],"[data]",[2654,2656],"[getData]",[1304,1306],"[uploadVideo]"]